# Makefile para execu√ß√£o local do ADK-Forge

.PHONY: help install playground api run test clean setup

# Ajuda padr√£o
help:
	@echo "ADK-Forge - Comandos dispon√≠veis:"
	@echo ""
	@echo "  make setup      - Configura√ß√£o inicial (cria .env, instala deps)"
	@echo "  make install    - Instala depend√™ncias do projeto"
	@echo "  make playground - Inicia interface web interativa (porta 8080)"
	@echo "  make api        - Inicia servidor API do ADK"
	@echo "  make run        - Executa CLI interativo do ADK-Forge"
	@echo "  make test       - Executa testes do projeto"
	@echo "  make clean      - Limpa arquivos tempor√°rios e caches"
	@echo ""
	@echo "Configura√ß√£o r√°pida:"
	@echo "  1. make setup"
	@echo "  2. Edite adk_forge/.env com suas credenciais"
	@echo "  3. make playground (ou make run)"

# Configura√ß√£o inicial
setup:
	@echo "üîß Configurando ambiente ADK-Forge..."
	@if [ ! -f adk_forge/.env ]; then \
		cp adk_forge/.env.example adk_forge/.env; \
		echo "‚úÖ Arquivo .env criado. Por favor, edite adk_forge/.env com suas credenciais."; \
	else \
		echo "‚ÑπÔ∏è  Arquivo .env j√° existe."; \
	fi
	@make install
	@echo ""
	@echo "‚ú® Setup completo! Pr√≥ximos passos:"
	@echo "1. Edite adk_forge/.env com sua GOOGLE_API_KEY"
	@echo "2. Execute: make playground"

# Instalar depend√™ncias
install:
	@echo "üì¶ Instalando depend√™ncias..."
	pip install -r requirements.txt
	@echo "‚úÖ Depend√™ncias instaladas!"

# Interface web interativa (ADK Web)
playground:
	@echo "üåê Iniciando ADK Web Playground..."
	@echo "üìç Acesse: http://localhost:8080"
	@echo ""
	cd adk_forge && adk web --port 8080

# API Server
api:
	@echo "üöÄ Iniciando ADK API Server..."
	@echo "üìç API dispon√≠vel em: http://localhost:8000"
	@echo ""
	adk api_server adk_forge --allow_origins="*"

# Executar CLI interativo
run:
	@echo "ü§ñ Iniciando ADK-Forge CLI..."
	@echo ""
	python -m adk_forge.main

# Executar testes
test:
	@echo "üß™ Executando testes..."
	@if [ -f test_forge.py ]; then \
		python test_forge.py; \
	else \
		echo "‚ö†Ô∏è  test_forge.py n√£o encontrado. Execute o ADK-Forge para ger√°-lo."; \
	fi

# Limpar arquivos tempor√°rios
clean:
	@echo "üßπ Limpando arquivos tempor√°rios..."
	find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	find . -type f -name "*.pyc" -delete 2>/dev/null || true
	find /tmp -name "adk-forge-session-*" -mtime +1 -exec rm -rf {} + 2>/dev/null || true
	@echo "‚úÖ Limpeza conclu√≠da!"

# Verificar configura√ß√£o
check:
	@echo "üîç Verificando configura√ß√£o..."
	@echo ""
	@echo "Python: $(shell python --version)"
	@echo "Pip: $(shell pip --version)"
	@echo ""
	@if [ -f adk_forge/.env ]; then \
		echo "‚úÖ Arquivo .env encontrado"; \
	else \
		echo "‚ùå Arquivo .env n√£o encontrado (execute: make setup)"; \
	fi
	@echo ""
	@python -c "import google.adk; print('‚úÖ Google ADK instalado')" 2>/dev/null || echo "‚ùå Google ADK n√£o instalado"
	@python -c "import dotenv; print('‚úÖ python-dotenv instalado')" 2>/dev/null || echo "‚ùå python-dotenv n√£o instalado"
	@echo ""
	@which adk >/dev/null 2>&1 && echo "‚úÖ ADK CLI dispon√≠vel" || echo "‚ùå ADK CLI n√£o encontrado"